{"version":3,"file":"static/js/196.aecce6b5.chunk.js","mappings":"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","sources":["components/pages/Contact.styled.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n  padding-top: 50px;\n  width: 500px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n  text-align: center;\n`;\n\nexport const SubTitle = styled.h2`\n  font-size: 32px;\n  text-align: center;\n`;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 0 auto;\n  padding: 12px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 12px;\n  font-size: 20px;\n  color: #ffffff;\n  background-color: #000000;\n  border-radius: 4px;\n  border: 1px solid transparent;\n  cursor: pointer;\n  transition: color 300ms, background-color 300ms, box-shadow 300ms;\n\n  &:hover{\n    color: #000000;\n    background-color: #d5d5d5;\n    box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n  }\n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useState } from 'react';\n\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handelChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const findContact = contacts.some(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n    if (findContact) {\n      alert(`${name} already exists`);\n    } else {\n      dispatch(addContacts({ name, number }));\n    }\n    reset();\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={handelChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={handelChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 10px;\n  padding: 12px;\n  border-radius: 4px;\n  background-color: rgba(247, 246, 246, 0.6);\n  border: 1px solid #000000;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  font-size: 20px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  color: #ffffff;\n  background-color: #000000;\n  border-radius: 4px;\n  border: 1px solid transparent;\n  cursor: pointer;\n\n  transition: color 300ms, background-color 300ms, box-shadow 300ms;\n\n  &:hover {\n    color: #000000;\n    background-color: #d5d5d5;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { List, Item, Button } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectError, selectLoading, selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContacts, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <List>\n      {loading && error ? (\n        <Loader />\n      ) : contacts.length === 0 && !error ? (\n        <p>Phonebook empty</p>\n      ) : (\n        contacts.map(contact => {\n          const { id, name, number } = contact;\n          return (\n            <Item key={id}>\n              {name + ' : ' + number}\n              <Button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n                Delete\n              </Button>\n            </Item>\n          );\n        })\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  border: 3px solid #000000;\n  border-radius: 4px;\n  cursor: pointer;\n\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { search } from 'redux/contacts/sliceFilter';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  \n  const handleChangeFilter = (e) =>{\n    dispatch(search(e.target.value.trim()))\n  }\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          value={filter}\n          onChange={handleChangeFilter}\n        />\n      </Label>\n    </div>\n  );\n};\n","import { Section, SubTitle, Title } from 'components/pages/Contact.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <Section>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      <Filter />\n      <ContactList />\n    </Section>\n  );\n};\nexport default Contacts;\n"],"names":["Section","styled","Title","SubTitle","Form","Label","Input","Button","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectLoading","state","contacts","isLoading","selectError","error","selectContacts","items","selectFilter","filter","selectVisibleContacts","contact","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handelChange","target","onSubmit","e","preventDefault","some","toLocaleLowerCase","alert","addContacts","type","onChange","title","required","List","Item","ContactList","loading","useEffect","fetchContacts","Loader","id","onClick","deleteContacts","Filter","search","trim"],"sourceRoot":""}